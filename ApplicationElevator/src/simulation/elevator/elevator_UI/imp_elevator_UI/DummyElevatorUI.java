/**
 * LogicalView/simulation/elevator/elevator_UI/imp_elevator_UI/ElevatorUI.java
 *
 * File generated from the Ascenseur::LogicalView::simulation.elevator::elevator_UI::imp_elevator_UI::ElevatorUI uml Class
 * Generated by the Acceleo UML 2.1 to Java generator module (Obeo)
 * $ Date : 24/11/14 15:55:31 (24 novembre 2014) $
 */
package simulation.elevator.elevator_UI.imp_elevator_UI;

// Start of user code to add imports for ElevatorUI
 
import simulation.elevator.commonType.Direction;
import simulation.elevator.commonType.TypeRequest;
import simulation.elevator.elevator_UI.int_elevator_UI.IConfigElevatorUI;
import simulation.elevator.elevator_UI.int_elevator_UI.IPushableButton;
import simulation.elevator.elevator_UI.int_elevator_UI.IRequest;
import simulation.elevator.moveOptimizer.imp_moveOptimizer.DummyMoveOptimizer;
import simulation.elevator.traffic.imp_traffic.DummyUser;
import simulation.elevator.moveOptimizer.int_moveOptimizer.IMoveOptimizer;
import simulation.elevator.moveOptimizer.int_moveOptimizer.MoveOptimizerFactory;

// End of user code

/**
 * Description of the class ElevatorUI.
 * @uml.dependency   supplier="simulation.elevator.elevator_UI.int_elevator_UI.IConfigElevatorUI"
 */

public class DummyElevatorUI implements IConfigElevatorUI, IPushableButton, IRequest{
		
		/**
		 * @uml.property  name="controlSystem"
		 */
		public Object controlSystem;
		/**
		 * @uml.property  name="buttonCall"
		 */
		public Object buttonCall;
		/**
		 * @uml.property  name="listButtonUI"
		 */
		public Object ListButtonUI;
		/**
		 * @uml.property  name="typeResquest"
		 * @uml.associationEnd  
		 */
		public TypeRequest typeResquest;
		/**
		 * @uml.property  name="direction"
		 * @uml.associationEnd  
		 */
		public Direction direction;
		/**
		 * @uml.property  name="level"
		 */
		public int level;
		/**
		 * @uml.property  name="buttonElevatorUI"
		 * @uml.associationEnd  
		 */
		public ButtonElevatorUI buttonElevatorUI;
		/**
		 * @uml.property  name="buttonCall2"
		 * @uml.associationEnd  
		 */
		public ButtonCall buttonCall2;
		
		// Start of user code to add fields for ElevatorUI
		 
		// End of user code
		
		/**
		 * Constructor.
		 *
		 * @param nbFloor
		 */
		public DummyElevatorUI(Object nbFloor) {
			// Start of user code for constructor ElevatorUI(Object nbFloor)
			super();
			// End of user code
		}
		
		/**
		 * Return controlSystem.
		 * @return  controlSystem
		 * @uml.property  name="controlSystem"
		 */
		public Object getControlSystem() {
			MoveOptimizerFactory.createMoveOptimizer(this);
			return controlSystem;
		}
		
		/**
		 * Set a value to attribute controlSystem.
		 * @param  controlSystem.
		 * @uml.property  name="controlSystem"
		 */
		public void setControlSystem(Object controlSystem) {
			this.controlSystem = controlSystem;
		}
		
		/**
		 * Return buttonCall.
		 * @return  buttonCall
		 * @uml.property  name="buttonCall"
		 */
		public Object getButtonCall() {
			return buttonCall;
		}
		
		/**
		 * Set a value to attribute buttonCall.
		 * @param  buttonCall.
		 * @uml.property  name="buttonCall"
		 */
		public void setButtonCall(Object buttonCall) {
			this.buttonCall = buttonCall;
		}
		
		/**
		 * Return ListButtonUI.
		 * @return  ListButtonUI
		 * @uml.property  name="listButtonUI"
		 */
		public Object getListButtonUI() {
			return ListButtonUI;
		}
		
		/**
		 * Set a value to attribute ListButtonUI.
		 * @param  ListButtonUI.
		 * @uml.property  name="listButtonUI"
		 */
		public void setListButtonUI(Object ListButtonUI) {
			this.ListButtonUI = ListButtonUI;
		}
		
		/**
		 * Return typeResquest.
		 * @return  typeResquest
		 * @uml.property  name="typeResquest"
		 */
		public TypeRequest getTypeResquest() {
			return typeResquest;
		}
		
		/**
		 * Set a value to attribute typeResquest.
		 * @param  typeResquest.
		 * @uml.property  name="typeResquest"
		 */
		public void setTypeResquest(TypeRequest typeResquest) {
			this.typeResquest = typeResquest;
		}
		
		/**
		 * Return direction.
		 * @return  direction
		 * @uml.property  name="direction"
		 */
		public Direction getDirection() {
			return direction;
		}
		
		/**
		 * Set a value to attribute direction.
		 * @param  direction.
		 * @uml.property  name="direction"
		 */
		public void setDirection(Direction direction) {
			this.direction = direction;
		}
		
		/**
		 * Return level.
		 * @return  level
		 * @uml.property  name="level"
		 */
		public int getLevel() {
			return level;
		}
		
		/**
		 * Set a value to attribute level.
		 * @param  level.
		 * @uml.property  name="level"
		 */
		public void setLevel(int level) {
			this.level = level;
		}
		
		/**
		 * Return buttonElevatorUI.
		 * @return  buttonElevatorUI
		 * @uml.property  name="buttonElevatorUI"
		 */
		public ButtonElevatorUI getButtonElevatorUI() {
			return buttonElevatorUI;
		}
		
		/**
		 * Set a value to attribute buttonElevatorUI.
		 * @param  buttonElevatorUI.
		 * @uml.property  name="buttonElevatorUI"
		 */
		public void setButtonElevatorUI(ButtonElevatorUI buttonElevatorUI) {
			this.buttonElevatorUI = buttonElevatorUI;
		}
		
		/**
		 * Return buttonCall.
		 * @return  buttonCall
		 * @uml.property  name="buttonCall2"
		 */
		public ButtonCall getButtonCall2() {
			return buttonCall2;
		}
		
		/**
		 * Set a value to attribute buttonCall.
		 * @param buttonCall.
		 */
		public void setButtonCall(ButtonCall buttonCall) {
		    this.buttonCall = buttonCall;
		}
		
		
		/**
		 * Description of the method setType.
		 *
		 * @param Type
		 */
		public void setType(TypeRequest Type) {
			// Start of user code for method setType

			// End of user code
		}

		/**
		 * Description of the method setCallType.
		 *
		 * @param direction
		 */
		public void setCallType(Direction direction) {
			// Start of user code for method setCallType

			// End of user code
		}

		/**
		 * Description of the method setLevelSelected.
		 *
		 * @param level
		 */
		public void setLevelSelected(int level) {
			// Start of user code for method setLevelSelected

			// End of user code
		}

		@Override
		public TypeRequest getType() {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public Direction getCallType() {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public int getLevelSelected() {
			// TODO Auto-generated method stub
			return 0;
		}

		@Override
		public void callElevator(Object currentFloor, Object direction) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void levelPush(Object level) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public DummyMoveOptimizer getDummyMoveOptimizer() {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public void setDummyMoveOptimizer(DummyMoveOptimizer dummyMoveOptimizer) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public DummyUser getDummyUser() {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public void setDummyUser(DummyUser dummyUser) {
			// TODO Auto-generated method stub
			
		}

		/**
		 * @uml.property  name="iMoveOptimizer"
		 * @uml.associationEnd  inverse="dummyElevatorUI:simulation.elevator.moveOptimizer.int_moveOptimizer.IMoveOptimizer"
		 */
		private IMoveOptimizer iMoveOptimizer;

		/**
		 * Getter of the property <tt>iMoveOptimizer</tt>
		 * @return  Returns the iMoveOptimizer.
		 * @uml.property  name="iMoveOptimizer"
		 */
		public IMoveOptimizer getIMoveOptimizer() {
			return iMoveOptimizer;
		}

		/**
		 * Setter of the property <tt>iMoveOptimizer</tt>
		 * @param iMoveOptimizer  The iMoveOptimizer to set.
		 * @uml.property  name="iMoveOptimizer"
		 */
		public void setIMoveOptimizer(IMoveOptimizer iMoveOptimizer) {
			this.iMoveOptimizer = iMoveOptimizer;
		}

		@Override
		public DummyUser getDummyUser1() {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public void setDummyUser1(DummyUser dummyUser1) {
			// TODO Auto-generated method stub
			
		}
		
		// Start of user code to add methods for ElevatorUI
		
		// End of user code
}